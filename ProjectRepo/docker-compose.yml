services:
  kafka:
    image: bitnami/kafka:3.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - hudi-net

  spark-hudi:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: spark-hudi
    depends_on:
      - kafka
    volumes:
      - ../producer_data:/producer_data              # Kafka Producer Input Data
      - ../consumer_service:/checkpoints             # Spark Streaming Checkpoints
      - ../hudi_table:/hudi_output                   # Hudi output table
      - ../producer_service:/producer                # Python Kafka producer
      - ../consumer_service:/consumer                # PySpark consumer
      - ../snapshot_service:/snapshot                # Snapshot queries
      - ./configs:/app/configs                       # App configs
      - ./jars:/opt/extra_jars                       # Local jars (Hudi + Kafka)
    environment:
      - PYSPARK_PYTHON=python3
    networks:
      - hudi-net

networks:
  hudi-net:
    driver: bridge

  